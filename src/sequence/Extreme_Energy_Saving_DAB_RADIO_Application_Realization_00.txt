title Extreme_Energy_Saving_DAB_RADIO_Application_Realization_00

actor #6495ED "user" as user

boundary "HMI" as HMI #gold
control "RadioEnhancedPM" as RadioPM #gold
control MediaPlayer #gold
entity DABRadioShutdownButton #gold

entity DABRadioPowerStatus #gold
entity CarAudioSource #gold

note over user, CarAudioSource#F9E79F: Version 1.0 First released. 

note over HMI, CarAudioSource#F9E79F: The actuall implementation service names would be different.

activate user #6495ED

==Vehicle System Power Mode == RUN & User has accessed into vehicle==#lightblue

activate HMI #gold
activate RadioPM #gold
activate MediaPlayer #gold
activate DABRadioShutdownButton #gold
activate DABRadioPowerStatus #gold
activate CarAudioSource #gold

RadioPM->CarAudioSource: getLastSource()
CarAudioSource-->RadioPM: return {{NOT_FM_AM_DAB}}
RadioPM->CarAudioSource: registerAudioSourceChange(RadioEhancedPM.onAudioSourceChangedCallback, RadioEhancedPM.handler)
box over DABRadioPowerStatus #gold: running
entryspacing 0
box over DABRadioShutdownButton #gold: open
entryspacing 0
box over CarAudioSource #gold: NOT_FM_AM_DAB
entryspacing 1

group #gold EES_UC_000: User shutdown DAB Radio module

user->HMI: Select [DABRadioShutdownButton] \nto "shutdown"
HMI->RadioPM: dispatch
RadioPM-->HMI: return RadioShutdownRiskTermsConditions
HMI->HMI: Popup(RadioShutdownRiskTermsConditions)

alt #6495ED EES_UC_000_Realization_B
user->HMI: Select "disaccept"
HMI->RadioPM: dispatch
else EES_UC_000_Realization_A
user->HMI: Select "accept"
HMI->RadioPM: dispatch
RadioPM->DABRadioPowerStatus: shutdown
box over DABRadioPowerStatus #lightgray: shutdown
deactivate DABRadioPowerStatus
activate DABRadioPowerStatus #lightgray
RadioPM->DABRadioShutdownButton: shutdown
box over DABRadioShutdownButton #lightgray: shutdown
RadioPM->RadioPM: setPersistency(DABRadioShutdownButton, "shutdown")
deactivate DABRadioShutdownButton
activate DABRadioShutdownButton #lightgray
end 

# User is allowed to shutdown DAB radio module while any radio feature not being running.
end

entryspacing 3

group #gold EES_UC_000_Realization_C

user->user: Left vehicle and set power off
deactivate HMI
deactivate RadioPM
deactivate MediaPlayer
deactivate DABRadioShutdownButton 
deactivate DABRadioPowerStatus
deactivate CarAudioSource

user->user: Access vehicle and set power on
entryspacing 1
==Vehicle System Power Mode == RUN & User has accessed into vehicle==#lightblue

activate HMI #gold
activate RadioPM #gold
activate MediaPlayer #gold
activate CarAudioSource #gold

RadioPM->CarAudioSource: getLastSource()
CarAudioSource-->RadioPM: return {{NOT_FM_AM_DAB}}
RadioPM->CarAudioSource: registerAudioSourceChange(RadioEhancedPM.onAudioSourceChangedCallback, RadioEhancedPM.handler)
RadioPM->RadioPM: getPersistency(DABRadioShutdownButton) \n-> return "shutdown"
RadioPM->DABRadioShutdownButton: shutdown
activate DABRadioShutdownButton #lightgray
RadioPM->DABRadioPowerStatus: shutdown
note over DABRadioPowerStatus #lightgray: There might be non-simultaneous \nwith real FM/AM/DAM PMIC \ncontrolled by MCU
activate DABRadioPowerStatus #lightgray

end 

group #6495ED EES_UC_001: User use radio feature
par #gold EES_UC_001_Realization_C
user->HMI: Select from steering wheel switch
thread EES_UC_001_Realization_D
user->HMI: Entry radio feature UI fragment
end 
HMI->MediaPlayer: dispatch
MediaPlayer->CarAudioSource: set("FM/AM/DAB")
deactivate CarAudioSource
activate CarAudioSource #6495ED
box over CarAudioSource #6495ED: FM/AM/DAB 
CarAudioSource-->RadioPM: RadioEhancedPM.onAudioSourceChangedCallback
RadioPM->DABRadioPowerStatus: open
deactivate DABRadioPowerStatus
activate DABRadioPowerStatus #gold
RadioPM->DABRadioShutdownButton: open
deactivate DABRadioShutdownButton
activate DABRadioShutdownButton #gold
end 


